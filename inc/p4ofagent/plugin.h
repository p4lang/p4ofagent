// This file contains declarations and typedefs required by/for the
// autogenerated openflow plugin

#ifndef _PLUGIN_
#define _PLUGIN_

#include "openflow-spec1.3.0.h"

// pipeline setup
// TODO: more documentation

typedef struct ofpat_pipeline_key {
    uint64_t *index;
    uint32_t *group_id;
    uint16_t *egr_port;
} ofpat_pipeline_key_t;

extern void
ofpat_pipeline_key_new (uint64_t *index, uint32_t *group_id,
                        uint16_t *egr_port, ofpat_pipeline_key_t *key);

extern int 
ofpat_pipeline_add (uint32_t bmap, ofpat_pipeline_key_t *key,
                    Pvoid_t *aargs);

extern int
ofpat_pipeline_mod (uint32_t bmap, ofpat_pipeline_key_t *key,
                    Pvoid_t *aargs);

extern int
ofpat_pipeline_set_default_nop ();

extern int
ofpat_pipeline_del (ofpat_pipeline_key_t *key);

// group creation

extern void
ofpat_group_alloc (uint32_t group_id, of_list_bucket_t *buckets,
                   enum ofp_group_type type);

extern int 
ofpat_group_create (uint32_t group_id, enum ofp_group_type type);

extern int
ofpat_group_delete (uint32_t group_id, enum ofp_group_type type);

// initializes the plugin

extern void
openflow_init (Pvoid_t *adds, Pvoid_t *mods, Pvoid_t *defs,
               Pvoid_t *dels, Pvoid_t *read_bytes_hit,
               Pvoid_t *read_bytes_missed, Pvoid_t *read_packets_hit,
               Pvoid_t *read_packets_missed, Pvoid_t *per_flow_stats_bytes,
               Pvoid_t *per_flow_stats_packets);

#endif
